# -*- coding: utf-8 -*-
"""Untitled39.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tg2z1HYPTy3demaLYk5NwjnBwA-8NP-I
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from fbprophet import Prophet
from fbprophet.plot import plot_plotly 
from fbprophet.diagnostics import cross_validation
from fbprophet.diagnostics import performance_metrics
from fbprophet.plot import plot_cross_validation_metric

data = pd.read_csv('India.csv', infer_datetime_format=True)

data.head()

data.drop('Unnamed: 0', inplace=True, axis=1)

data.head()

data.replace(0, np.nan, inplace=True)

data.isnull().sum()

data.interpolate(method='linear', inplace=True)
data.head()

data.isnull().sum()

data.drop("Air temperature | ('C)", inplace=True, axis=1)
data.rename(columns={'DateTime':'ds', 'Power generated by system | (kW)':'y'}, inplace=True)
data.head()

data = data[["ds", "y", "Pressure | (atm)", "Wind speed | (m/s)", "Wind direction | (deg)"]]
data.head()

model = Prophet(mcmc_samples=0, seasonality_prior_scale=0.1,changepoint_prior_scale=0.05, seasonality_mode='multiplicative', \
                yearly_seasonality=20, \
                weekly_seasonality=False, \
                daily_seasonality=False)

# model = Prophet(changepoint_prior_scale=0.05)
# model.add_regressor("Air temperature | ('C)", prior_scale=0.5, mode='multiplicative', standardize=False)
model.add_regressor("Pressure | (atm)", prior_scale=0.5, mode='multiplicative', standardize=False)
model.add_regressor("Wind speed | (m/s)", prior_scale=0.5, mode='multiplicative', standardize=False)
model.add_regressor("Wind direction | (deg)", prior_scale=0.5, mode='multiplicative', standardize=False)
model.fit(data)

df_cv = cross_validation(model, initial='365 days', period='700 days', horizon='365 days')
df_cv.head()

df_p = performance_metrics(df_cv)
df_p.head()

fig = plot_cross_validation_metric(df_cv, metric='mape')

# neq=pd.DataFrame()
# # neq = neq.reindex(neq.columns.tolist() + ['ds','Pressure | (atm)','Wind speed | (m/s)', 'Wind direction | (deg)'], axis=1)
# w = [0.979103]
# x = [9.014]
# y = [229.0]
# date = ['2007-01-01 00:00:00']
# neq['ds'] = date
# neq['Pressure | (atm)'] = w
# neq['Wind speed | (m/s)'] = x 
# neq['Wind direction | (deg)'] = y
# neq = neq[['ds', 'Pressure | (atm)', 'Wind speed | (m/s)', 'Wind direction | (deg)']]
# forecast = model.predict(neq)
# forecast['yhat']

# neq

# !pip install fbprophet==0.5

# import pickle
# pkl_path = "/content/prophet.pkl"
# with open(pkl_path, "wb") as f:
    # Pickle the 'Prophet' model using the highest protocol available.
    # pickle.dump(model, f)

